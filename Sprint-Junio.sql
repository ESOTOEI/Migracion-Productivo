/* Historias de usuario - Modulo de comunicaciones - Programacion*/
--Creacion de tabla para registro de log de descarga de las constancias
CREATE TABLE LOG_DESCARGAS_CONSTANCIAS (
    ID NUMBER GENERATED ALWAYS AS IDENTITY START WITH 1 INCREMENT BY 1,
    GUID RAW(16),
    PRIMARY KEY(ID),
    TIPO_CONSTANCIA VARCHAR2(1000),
    USUARIO_SOLICITANTE VARCHAR(1000),
    FECHA_SOLICITUD TIMESTAMP,
    FECHA_DESCARGUE TIMESTAMP


);
--Triger para generacion de guid en log de descarga 
CREATE OR REPLACE TRIGGER TRG_LOG_DESCARGAS_GUID
BEFORE INSERT ON LOG_DESCARGAS_CONSTANCIAS
FOR EACH ROW
BEGIN
  :NEW.GUID := SYS_GUID();
END;
--Creacion de tabla para el registro del feedback
CREATE TABLE FEEDBACK_AUDITOR (
    ID NUMBER GENERATED ALWAYS AS IDENTITY START WITH 1 INCREMENT BY 1,
    PRIMARY KEY(ID),
    GUID VARCHAR2(100),
    CLIENTE VARCHAR(1000),
    DETALLE_SOLICITUD VARCHAR2(5000),
    FECHA_REGISTRO TIMESTAMP,
    USUARIO VARCHAR2(500)

);
--Trigger para insercion de datos restantes tabla feedback_auditor
create or replace TRIGGER TRG_FEEDBACK_GUID
BEFORE INSERT ON FEEDBACK_AUDITOR
FOR EACH ROW
DECLARE
  v_num NUMBER;
BEGIN
  SELECT NVL(MAX(TO_NUMBER(GUID)), 0) + 1 INTO v_num
  FROM FEEDBACK_AUDITOR;

  :NEW.GUID := LPAD(v_num, 4, '0');
  
  :NEW.USUARIO := v('APP_USER');
END;
/
--Alerta para notificacion despues del registro del auditor
create or replace PROCEDURE ALERTA_FEEDBACK_AUDITOR (
  p_proceso_id    VARCHAR2,
  p_auditor        VARCHAR2,
  p_ejecutivo      VARCHAR2
) AS
  v_razon_social VARCHAR2(1000);
  v_nombre_ejecutivo VARCHAR2(200);
  v_mail_ejecutivo VARCHAR2(500);
  v_destinatario VARCHAR2(1000) := 'esotoe@icontec.org';
  v_mensaje      CLOB;
BEGIN
    SELECT bpm.EMAIL_EJECUTIVO, bpm.EJECUTIVO, ges.RAZON_SOCIAL 
    INTO  v_mail_ejecutivo, v_nombre_ejecutivo, v_razon_social
    FROM BPM_PROCESOS bpm
    LEFT JOIN GES_CERTIFICADOS ges ON ges.PROCESO_ID = bpm.id
    WHERE bpm.ID = p_proceso_id;
  -- Construcción del cuerpo del mensaje
  v_mensaje := 
    '<html><body>' ||
    'Estimado/a ' || v_nombre_ejecutivo || '.<br><br>' || CHR(10) ||
    'Le informamos que el profesional <b>' || p_auditor || '</b> ha registrado una nueva oportunidad de negocio como resultado de la auditoría realizada al cliente <b>' || v_razon_social || '</b>.<br>' || CHR(10) ||
    'Le invitamos a revisar el detalle del registro en el Módulo de Comunicaciones para dar seguimiento oportuno.<br><br>' || CHR(10) ||

    '<a href="https://ga6d8915c217411-icontecbdautonomousatp.adb.us-ashburn-1.oraclecloudapps.com/ords/r/iconsenddev/aplicacion-junio-sg-comunicaciones/home?session=310671512111882" style="' ||
      'display:inline-block;' ||
      'padding:10px 20px;' ||
      'background-color:#007acc;' ||
      'color:#ffffff;' ||
      'text-decoration:none;' ||
      'border-radius:5px;' ||
      'font-weight:bold;' ||
      'font-family:Arial, sans-serif;' ||
      '">Ver Detalle</a><br><br>' ||

    'Gracias por su atención.<br>' ||
    '</body></html>';

  -- Enviar correo
  APEX_MAIL.SEND(
    p_to        => v_mail_ejecutivo ,
    p_from      => 'send@icontec.org',
    p_subj      => 'Nueva Oportunidad de Negocio',
    p_body      => v_mensaje,
    p_body_html => v_mensaje
  );

  -- Forzar envío del correo
  APEX_MAIL.PUSH_QUEUE;
END;
/
/* Historias de usuario - Modulo de comunicaciones - Acreditacion*/
  CREATE TABLE "ACREDITACION_COMUNICACIONES" 
   (	"NO_SOLICITUD" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  NOT NULL ENABLE, 
	"CLIENTE" NUMBER NOT NULL ENABLE, 
	"DETALLE" VARCHAR2(4000), 
	"ADJUNTO" BLOB, 
	"ADJUNTO_FILENAME" VARCHAR2(255), 
	"ADJUNTO_MIME_TYPE" VARCHAR2(255), 
	"CREATED" DATE, 
	"CREATED_BY" VARCHAR2(100), 
	"UPDATED" DATE, 
	"UPDATED_BY" VARCHAR2(100), 
	 PRIMARY KEY ("NO_SOLICITUD")
  USING INDEX  ENABLE
   ) ;

  ALTER TABLE "ACREDITACION_COMUNICACIONES" ADD CONSTRAINT "FK_ACRED_COM_CLIENTE" FOREIGN KEY ("CLIENTE")
	  REFERENCES "GES_CLIENTES" ("ID") ENABLE;

  CREATE OR REPLACE EDITIONABLE TRIGGER "ACC_LABO_TRV_BIU" 
    before insert or update  
    on ACREDITACION_COMUNICACIONES 
    for each row 
begin 
    if inserting then 
        :new.created := sysdate; 
        :new.created_by := nvl(sys_context('APEX$SESSION','APP_USER'),user); 
    end if; 
    :new.updated := sysdate; 
    :new.updated_by := nvl(sys_context('APEX$SESSION','APP_USER'),user); 
end ACC_LABO_TRV_BIU;
/
ALTER TRIGGER "ACC_LABO_TRV_BIU" ENABLE;

/* Historias de usuario - Modulo de comunicaciones - Servicio al Cliente*/
--Creacion para registro de quejas 
CREATE TABLE REGISTRO_QUEJAS (
  ID                  NUMBER GENERATED ALWAYS AS IDENTITY START WITH 1 INCREMENT BY 1,
  CODIGO_QUEJA        VARCHAR2(10),
  FECHA_REGISTRO      TIMESTAMP DEFAULT SYSTIMESTAMP,
  USUARIO_REPORTA     VARCHAR2(100),
  CLIENTE             VARCHAR2(200),
  CANAL_REPORTE       VARCHAR2(100),
  TIPO_QUEJA          VARCHAR2(100),
  DESCRIPCION         VARCHAR2(4000),
  PRIORIDAD           VARCHAR2(20),
  ESTADO              VARCHAR2(50),
  RESPONSABLE         VARCHAR2(100),
  FECHA_SOLUCION      TIMESTAMP,
  COMENTARIO_CIERRE   VARCHAR2(1000),
  IMPACTO             VARCHAR2(100),
  NOMBRE_ARCHIVO      VARCHAR2(255),    
  MIME_TYPE_ARCHIVO   VARCHAR2(255),    
  ARCHIVO_ADJUNTO     BLOB,              
  PRIMARY KEY (ID)
);
--Trigger para generacion del codigo de queja
CREATE OR REPLACE TRIGGER TRG_CODIGO_QUEJA
BEFORE INSERT ON REGISTRO_QUEJAS
FOR EACH ROW
DECLARE
  v_num NUMBER;
BEGIN
  SELECT NVL(MAX(TO_NUMBER(SUBSTR(CODIGO_QUEJA, 4))), 0) + 1
  INTO v_num
  FROM REGISTRO_QUEJAS;

  :NEW.CODIGO_QUEJA := 'QJ-' || LPAD(v_num, 4, '0');
END;

